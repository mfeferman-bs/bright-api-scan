name: bright-api-incremental-scan

on:
  workflow_call:
    inputs:
      archive_path:
        required: true
        type: string
      scan_name:
        required: false
        type: string
        default: "Incremental API Scan"
    secrets:
      BRIGHT_API_TOKEN:
        required: true
      BRIGHT_PROJECT_ID:
        required: true
      KEY_GITHUB:
        required: true

jobs:
  bright_api_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload OpenAPI/Swagger file using Bright CLI
        id: upload
        run: |
          archive_path="${{ inputs.archive_path }}"
          archive_id=$(docker run --rm -v "$PWD:$PWD" -w "$PWD" brightsec/cli archive:upload --type openapi --token "${{ secrets.BRIGHT_API_TOKEN }}" --project-id "${{ secrets.BRIGHT_PROJECT_ID }}"   "$archive_path")

          if [ -z "$archive_id" ]; then
            echo "::error::Failed to upload archive."
            exit 1
          fi
          echo "file_id=$archive_id" >> $GITHUB_OUTPUT

      - name: Run Discovery
        id: discovery
        uses: NeuraLegion/bright-github-actions/run-discovery@release
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          project_id: ${{ secrets.BRIGHT_PROJECT_ID }}
          discovery_types: |
            [ "oas" ]
          file_id: ${{ steps.upload.outputs.file_id }}

      - name: Wait for Discovery to Complete
        uses: NeuraLegion/bright-github-actions/wait-for-discovery@release
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          discovery_id: ${{ steps.discovery.outputs.id }}
          project_id: ${{ secrets.BRIGHT_PROJECT_ID }}
          timeout: 600

      - name: Get entrypoints
        run: |
          (docker run --rm brightsec/cli entrypoints:list --token "${{ secrets.BRIGHT_API_TOKEN }}" --project "${{ secrets.BRIGHT_PROJECT_ID }}" --limit 500 --status new --status changed) > entrypoints.json
          if [ ! -f entrypoints.json ]; then
            echo "::error::entrypoints.json not found" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Format entrypoint IDs
        id: ids
        run: |
          ids=$(grep -o '"id": *"[^"]*"' entrypoints.json | sed 's/.*: *"//' | sed 's/"$//' | tr '\n' ' ')
          entryPoints=""
          for id in $ids; do entryPoints+="-e $id "; echo "$id"; done

          if [ -z "$entryPoints" ]; then
            echo "::error::No entrypoints found" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "::info::eps=$entryPoints" >> $GITHUB_OUTPUT
          
      - name: Run Vulnerability Scan
        id: scan
        run: |
          timestamp=$(date +'%Y-%m-%d_%H-%M-%S')
          scan_name="API scan $timestamp"

          docker run --rm brightsec/cli scan:run --token "${{ secrets.BRIGHT_API_TOKEN }}" --project "${{ secrets.BRIGHT_PROJECT_ID }}" --bucket "api" --name "$scan_name" --entrypoint ${{ steps.ids.outputs.entryPoints }}
          

