name: BC Security Test Example

on:
  workflow_call:

    inputs:
      crawl_path:
        required: true
        type: string
      project_id:
        required: true
        type: string
      repeater_id:
        required: false
        type: string
      scan_name:
        required: false
        type: string
        default: "Bright Security Scan"
    secrets:
      BRIGHT_API_TOKEN:
        required: true

jobs:
  security-test:
    runs-on: ubuntu-latest
    environment: stable
    steps:
      - name: Start Discovery
        id: start
        uses: NeuraLegion/run-discovery@release
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          hostname: app.brightsec.com
          name: Bright Discovery - ${{ github.sha }}
          discovery_types: |
            [ "crawler" ]
          crawler_urls: |
            [ ${{ inputs.crawl_path }} ]
          project_id: ${{ inputs.project_id }} # 5W9tVzHKvq8No317koeJTa
          repeaters: |
            [ ${{ secrets.BRIGHT_REPEATER_ID }} ]
      - name: Wait for discovery to finish ‚è≥
        id: wait-discovery
        uses: NeuraLegion/wait-for-discovery@v1
        continue-on-error: true
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          discovery_id: ${{ steps.start.outputs.id }}
          project_id: ${{ inputs.project_id }}
          hostname: app.brightsec.com
          timeout: 120
      - name: List entrypoints
        id: entrypoints
        uses: NeuraLegion/list-entrypoints@v1.1
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          hostname: app.brightsec.com
          limit: 200
          project_id: ${{ inputs.project_id }}
          ids_only: true
      - name: Use Entrypoints
        run: |
          echo "Project ID: ${{ steps.entrypoints.outputs.projectId }}"
          echo "Entrypoints: ${{ steps.entrypoints.outputs.entrypoints }}"
      - name: Bright Security Scan üèÅ
        id: scan
        uses: NeuraLegion/run-scan@v1.2
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          hostname: app.brightsec.com
          name: GitHub scan ${{ github.sha }}
          discovery_types: |
            [ "crawler" ]
          module: "dast"
          crawler_urls: |
            [ ${{ inputs.crawl_path }} ]
          hosts_filter: |
            [ ]
      - name: Wait for any issues ‚è≥
        id: wait
        uses: NeuraLegion/wait-for@v1.1
        continue-on-error: true
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          hostname: app.brightsec.com
          scan: ${{ steps.scan.outputs.id }}
          wait_for: any
          timeout: 5 
      - name: Stop the scan üõë
        id: stop-scan
        uses: NeuraLegion/stop-scan@v1.1
        with:
          api_token: ${{ secrets.BRIGHT_API_TOKEN }}
          hostname: app.brightsec.com
          scan: ${{ steps.scan.outputs.id }}
